name: Deploy to staging

on:
  push:
    tags-ignore:
      - '**' # do not run on tags
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  staging-deploy:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Generate Git Info File
        run: |
          echo "Commit SHA: ${{ vars.GITHUB_SHA }}" > git-info.txt
          echo "Author name: ${{ vars.GITHUB_ACTOR }}" >> git-info.txt
          echo "Event path: ${{ vars.GITHUB_EVENT_PATH }}" >> git-info.txt

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v4.1.8
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_IP }}
          REMOTE_USER: ${{ secrets.HOST_USER }}
          TARGET: /home/${{ secrets.HOST_USER }}/api-server/
          EXCLUDE: "/.git/"
          SCRIPT_AFTER: |
            cd api-server
            sudo pip3 install -r requirements.txt
            sudo rm -rf __pycache__
            sudo supervisorctl restart all

  draft-release:
    name: Create Draft release
    needs: staging-deploy
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Set properties
        id: properties
        run: echo "version=$(date +'%Y.%m.%d%H%M')" >> $GITHUB_OUTPUT
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.properties.outputs.version }}
          release_name: v${{ steps.properties.outputs.version }}
          body: 'New release'
          draft: true
